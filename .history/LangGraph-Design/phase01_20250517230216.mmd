%% title: Phase 1 Architecture Diagram: Basic Setup (Corrected)
%%{
  init: {
    'theme': 'base', %% Starting from a base theme for customization
    'themeVariables': {
      'fontFamily': 'Arial, sans-serif', %% Using a common, readable font; Comic Sans might not be universally available/readable
      'fontSize': '16px',             %% Slightly larger font size
      'primaryColor': '#ADD8E6',       %% Light Blue (e.g., for UI)
      'secondaryColor': '#90EE90',      %% Light Green (e.g., for Backend)
      'tertiaryColor': '#FFFF99',       %% Light Yellow (e.g., for External)
      'quaternaryColor': '#FFB6C1',     %% Light Red/Pink (e.g., for Database)
      'lineColor': '#555',              %% Darker lines for clarity
      'nodeBorder': '#333',             %% Darker node borders
      'primaryTextColor': '#333',       %% Dark text for readability
      'clusterBorder': '#BBB',          %% Lighter border for subgraphs
      'clusterBkg': '#F9F9F9'           %% Light background for subgraphs
    },
     'flowchart': {
      %% Use 'basis' or 'linear' for curved lines - also controlled by linkStyle
       'curve': 'basis' 
       %% Request hand-drawn look - support is renderer-dependent
       'look': 'classic' 
    }
     
  }
}%%

graph RL

    %% Define Custom Styles using theme variables or specific colors
    classDef uiStyle fill:#ADD8E6,stroke:#333,stroke-width:2px;       %% Light Blue
    classDef backendStyle fill:#90EE90,stroke:#333,stroke-width:2px;   %% Light Green
    classDef llmStyle fill:#FFFF99,stroke:#333,stroke-width:2px;      
    classDef externalStyle fill:#FFFF99,stroke:#333,stroke-width:2px; 


    %% Define Nodes and Subgraphs with IDs and Titles
    
    subgraph BS[Backend Services]
        direction TB;
        BackendAPI[Backend API - Python]:::backendStyle
        subgraph LG[LLM Gateway]
            direction TB;
            LiteLLMGateway{{LiteLLM}}:::llmStyle
        end
        subgraph DS[Data Storage]
             direction TB;
             MongoDB[(MongoDB Database)]:::dbStyle
        end
    end



    subgraph ED[External Dependencies]
        direction TB;
        ExternalLLM[(External LLM Provider)]:::externalStyle 
    end

    subgraph FE[Frontend]
        direction TB
        UI[User Interface-UI]:::uiStyle
    end


    %% Define Flow (Edges)
    UI -- "User Query" --> BackendAPI;
    BackendAPI -- "Forwards Query" --> LG;
    LG -- "Request to LLM" --> ED;
    ED -- "Returns Response" --> LG;
    LG -- "Forwards Response" --> BackendAPI;
    BackendAPI -- "Generates/Sends Response" --> UI;
    BackendAPI -- "Stores/Retrieves Basic Data" --> DS;

    %% Apply curved lines using 'basis' interpolation
    linkStyle default interpolate basis;